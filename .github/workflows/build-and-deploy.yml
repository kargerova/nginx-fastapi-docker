name: Deploy NGINX Proxy and Swagger app

on:
    workflow_dispatch:  # Spustitelný manuálně

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production


    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push app1
      run: |
        docker build -t app1 ./api_app_1
        docker tag app1 ${{ secrets.DOCKERHUB_USERNAME }}/app1:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/app1:${{ github.sha }}

    - name: Build and push nginx
      run: |
        docker build -t nginx ./nginx
        docker tag nginx ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ github.sha }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ github.sha }}

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to server
      env:
        APP_SERVER_IP: ${{ vars.APP_SERVER_IP }}
        APP_SERVER_PORT: ${{ vars.APP_SERVER_PORT }}
        APP_SERVER_USERNAME: ${{ secrets.APP_SERVER_USERNAME }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yml $APP_SERVER_USERNAME@$APP_SERVER_IP:/home/ubuntu/deploy
        ssh -o StrictHostKeyChecking=no $APP_SERVER_USERNAME@$APP_SERVER_IP "
        export APP_SERVER_IP=${{ secrets.APP_SERVER_IP }}
        export APP_SERVER_PORT=${{ secrets.APP_SERVER_PORT }}
        export GITHUB_SHA=${{ github.sha }}
        sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app1:$GITHUB_SHA
        sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx:$GITHUB_SHA
        sudo docker-compose -f /home/ubuntu/deploy/docker-compose.yml up -d
        "

    # - name: Deploy to server
    #   uses: alex-ac/github-action-ssh-docker-compose@master
    #   env:
    #     APP_SERVER_IP: ${{ vars.APP_SERVER_IP }}
    #     APP_SERVER_PORT: ${{ vars.APP_SERVER_PORT }}
    #     GITHUB_SHA: ${{ github.sha }}
    #   with:
    #     ssh_host: ${{ vars.APP_SERVER_IP }}
    #     ssh_port: 22
    #     ssh_private_key:  ${{ secrets.SSH_PRIVATE_KEY }}
    #     ssh_user: ubuntu
    #     docker_compose_filename: docker-compose.yml

    - name: Check if app is running
      env:
        APP_SERVER_IP: ${{ vars.APP_SERVER_IP }}
        APP_SERVER_PORT: ${{ vars.APP_SERVER_PORT }}
      run: |
        curl -s $APP_SERVER_IP:$APP_SERVER_PORT/app1/api/